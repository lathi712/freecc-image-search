doctype
html(lang='en')
  head
    meta(charset='utf-8')
    meta(http-equiv='X-UA-Compatible', content='IE=edge')
    meta(name='viewport', content='width=device-width, initial-scale=1')
    // The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags
    meta(name='description', content='')
    meta(name='author', content='')
    title Image Search Abstraction Layer
    // Bootstrap core CSS
    link(href='/css/bootstrap.min.css', rel='stylesheet')
    link(href='https://maxcdn.bootstrapcdn.com/font-awesome/4.6.3/css/font-awesome.min.css', rel='stylesheet')
    //- link(href='/css/style.css', rel='stylesheet')
    // HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries
    //if lt IE 9
    script(src='https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js')
    script(src='https://oss.maxcdn.com/respond/1.4.2/respond.min.js')

  body
    .container
      block content

    script(src='/js/jquery.min.js')
    script(src='/js/bootstrap.min.js')
block content
  .row
    .col-md-6
      h1 Image Search Abstraction Layer
    .col-md-12
      hr
      h2 Objective: Build a full stack JavaScript app that allows you to  
      br
      h3 search for images like this:
      br
      code https://cryptic-ridge-9197.herokuapp.com/api/imagesearch/lolcats%20funny?offset=10 
      br
      h3 browse recent search queries like this: 
      br
      code https://cryptic-ridge-9197.herokuapp.com/api/latest/imagesearch/. 
      h3 Then deploy it to Heroku.
      hr
      h3 Here are the specific user stories you should implement for this project:
      ol
        li User Story: I can get the image URLs, alt text and page urls for a set of images relating to a given search string.

        li User Story: I can paginate through the responses by adding a ?offset=2 parameter to the URL.

        li User Story: I can get a list of the most recently submitted search strings.